(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))c(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&c(s)}).observe(document,{childList:!0,subtree:!0});function o(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function c(r){if(r.ep)return;r.ep=!0;const n=o(r);fetch(r.href,n)}})();const d="https://pokeapi.co/api/v2/",i=document.querySelector("#display__cards__wrapper"),k=document.querySelectorAll("button"),p=document.querySelector("#search__input"),v=document.querySelectorAll(".next"),g=document.querySelectorAll(".prev");let h=[],a=[],u=0;const m=20;async function P(e=0,t=20){try{const o=`${d}/pokemon?offset=${e}&limit=${t}`;h=[...(await(await fetch(o)).json()).results.map(s=>s.url)]}catch(o){console.error(o)}}async function L(e){try{const o=await(await fetch(e)).json();a.push(o)}catch(t){console.error(t)}}async function f(e){i.innerHTML+=`
        <div class="poke_card">
            <div>
                <div class="poke_name_id">
                    <p>#${e.id.toString().padStart(3,"0")}</p>
                    <p>${e.name}</p>
                </div>
                <img src="${e.sprites.other.dream_world.front_default}" />
                ${T(e)}
            </div>
        </div>
    `}function T(e){return e.types.map(o=>o.type.name).map(o=>`<button class="${o}">${o}</button>`).join("")}async function l(){i.innerHTML="",a=[];const e=u*m;await P(e,m),await Promise.all(h.map(async t=>await L(t))),a.sort((t,o)=>t.id-o.id).forEach(async t=>await f(t))}async function $(e){try{i.innerHTML="",a=[];const t=`${d}/type/${e}`,n=(await(await fetch(t)).json()).pokemon.map(s=>s.pokemon.url).slice(0,50);await Promise.all(n.map(async s=>await L(s))),a.sort((s,w)=>s.id-w.id).forEach(async s=>await f(s))}catch(t){console.error(t)}}async function A(e){try{i.innerHTML="",a=[];const t=`${d}/pokemon/${e.toLowerCase()}`,o=await fetch(t);if(!o.ok){i.innerHTML="<p>Pokémon not found</p>";return}const c=await o.json();a.push(c),await f(c),p.value=""}catch(t){console.error(t),i.innerHTML="<p>Error when searching for Pokémon</p>"}}function E(){u++,l()}function _(){u>0&&u--,l()}k.forEach(e=>{e.addEventListener("click",()=>{const t=e.className.toLowerCase();$(t)})});let y;p.addEventListener("input",()=>{clearTimeout(y);const e=p.value.trim().toLowerCase();e?y=setTimeout(()=>{A(e)},800):l()});v.forEach(e=>e.addEventListener("click",E));g.forEach(e=>e.addEventListener("click",_));l();
